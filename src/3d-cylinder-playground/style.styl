*
  box-sizing border-box
  transform-style preserve-3d

body
  display grid
  place-items center
  min-height 100vh
  background hsl(0, 0%, 15%)
  overflow hidden

:root
  --height 40
  --radius 20
  --animate 1

@property --rotate-x
  syntax '<angle>'
  inherits false
  initial-value 0deg
@property --rotate-y
  syntax '<angle>'
  inherits false
  initial-value 0deg
@property --rotate-z
  syntax '<angle>'
  inherits false
  initial-value 0deg

.scene
  transform rotateX(calc(var(--base-rotate-x, -24) * 1deg)) rotateY(calc(var(--base-rotate-y, -24) * 1deg)) rotateY(var(--rotate-y)) rotateX(var(--rotate-x)) rotateZ(var(--rotate-z))
  animation tumble-x calc(var(--animate) * 3s) -1s infinite linear, tumble-y calc(var(--animate) * 4s) -6s infinite linear, tumble-z calc(var(--animate) * 5s) -3s infinite linear

@keyframes tumble-x
  to
    --rotate-x 360deg
@keyframes tumble-y
  to
    --rotate-y 360deg
@keyframes tumble-z
  to
    --rotate-z 360deg

.cylinder
  --bg 'hsl(%s, 80%, 50%)' % var(--hue)
  height calc(var(--height, 40) * 1vmin)
  position relative
  width calc(var(--radius, 40) * 2vmin)

  &__segment
    filter brightness(var(--b, 1))
    background var(--bg, hsl(0, 80%, 50%))
    position absolute

  // Top
  &__end:nth-of-type(1)
  &__end:nth-of-type(2)
    --b 1.2
    top var(--t, 0)
    height calc(var(--radius, 40) * 2vmin)
    width calc(var(--radius, 40) * 2vmin)
    border-radius 50%
    transform translate(0, -50%) rotateX(90deg)

  &__end:nth-of-type(2)
    --b 0.8
    --t 100%

  &__side
    --b 0.89
    height calc(var(--height, 30) * 1vmin)
    width calc(var(--side) * 1vmin)
    top 0
    left 50%
    transform translate(-50%, 0) rotateY(calc((var(--index, 0) * 360 / var(--sides)) * 1deg)) translate3d(0, 0, calc(var(--projection) * 1vmin))
